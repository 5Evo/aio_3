version: "3.9"
services:
  postgres:
    hostname: postgres
    container_name: postgres
    image: postgres:14.8
    restart: always
#    command:
#      - "postgres"
#      - "-c"
#      - "max_connections=50"
#      - "-c"
#      - "shared_buffers=1GB"
#      - "-c"
#      - "effective_cache_size=4GB"
#      - "-c"
#      - "work_mem=16MB"
#      - "-c"
#      - "maintenance_work_mem=512MB"
#      - "-c"
#      - "random_page_cost=1.1"
#      - "-c"
#      - "temp_file_limit=10GB"
#      - "-c"
#      - "log_min_duration_statement=200ms"
#      - "-c"
#      - "idle_in_transaction_session_timeout=10s"
#      - "-c"
#      - "lock_timeout=1s"
#      - "-c"
#      - "statement_timeout=60s"
#      - "-c"
#      - "shared_preload_libraries=pg_stat_statements"
#      - "-c"
#      - "pg_stat_statements.max=10000"
#      - "-c"
#      - "pg_stat_statements.track=all"
    env_file:
      - .prod_env
    environment:
      - POSTGRES_PASSWORD=${POSTGRE_PASSW}
      - POSTGRES_USER=${POSTGRE_USER}
      - POSTGRES_DB=${POSTGRE_DB}
      - POSTGRES_HOST=${POSTGRE_HOST}
    volumes:
      - agent5_db:/var/lib/postgresql/data
    networks:
      - agent_net
    ports:
      - "5432:5432"
#    healthcheck:
#      test: ["CMD-SHELL", "pg_isready -U ${POSTGRE_USER} -d ${POSTGRE_DB}"]
#      interval: 10s
#      timeout: 5s
#      retries: 5
#      start_period: 10s
#    restart: unless-stopped
#    deploy:
#      resources:
#        limits:
#          cpus: '1'
#          memory: 1G

  bot:
    container_name: tg_bot_agent500
    build: .
    restart: always
    volumes:
      - type: bind
        source: /home/agadmin/agent5/01/faiss_indexes
        target: /agent5_00/faiss_indexes
      - type: bind
        source: /home/agadmin/agent5/01/settings
        target: /agent5_00/settings

    links:
      - postgres
    depends_on:
      - postgres
    networks:
      - agent_net
    env_file:
      - .prod_env
    environment:
      - POSTGRES_PASSWORD=${POSTGRE_PASSW}
      - POSTGRES_USER=${POSTGRE_USER}
      - POSTGRES_DB=${POSTGRE_DB}
      - POSTGRES_HOST=${POSTGRE_HOST}

networks:
  agent_net:

volumes:
  agent5_db:
